<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan base-package="de.zaunberg.burgershop.ui" />

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />

    <bean class="de.zaunberg.burgershop.service.ShopServiceImpl" id="ShopService"/>

    <bean class="de.zaunberg.burgershop.dao.UserDaoImpl" id="userDao"/>

    <bean class="de.zaunberg.burgershop.dao.RoleDaoImpl" id="roleDao"/>

    <bean class="de.zaunberg.burgershop.dao.OrderDaoImpl" id="orderDao"/>

    <bean class="de.zaunberg.burgershop.service.UserDetailsServiceImpl" id="userDetailsService"/>

    <!-- Configurations of dataSource are in db.properties -->
    <context:property-placeholder location="classpath:db.properties" />

    <!-- dataSource bean -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <property name="driverClassName" value="${db.driver}" />
    </bean>

    <!-- Configurations of sessionFactory of hibernate -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="de.zaunberg.burgershop.model"/>
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${db.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>

            </props>
        </property>
    </bean>

    <!-- Configures transaction management via annotation @Transactional -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--Spring security -->
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/register.jsp" security="none"/>
    <security:http pattern="/register.html" security="none"/>

    <security:http use-expressions="true">
        <security:intercept-url pattern="/**" access="hasAnyRole('User','Admin')" />
        <security:form-login login-page="/login.jsp"  default-target-url="/index.jsp"
                             always-use-default-target="true" authentication-failure-url="/login?error=true"/>

        <security:logout logout-url="/logout" logout-success-url="/login.jsp"/>
    </security:http>

    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
    </bean>

    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
            </list>
        </property>
    </bean>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService">
        </security:authentication-provider>
    </security:authentication-manager>

</beans>